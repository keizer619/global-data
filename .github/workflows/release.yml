name: Release workflow

on:
  release:
    types:
      - "published"

jobs:
  update-version:
    runs-on: ubuntu-22.04
    name: Update package version numbers
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      # See: https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
      - name: Get version number from git tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV # See: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - name: Install toml-cli to modify toml file
        # See: https://pypi.org/project/toml-cli/
        run: |
          python -m pip install toml-cli
      - name: Update version in Ballerina.toml files
        run: |
          OLD_VERSION=$(toml get --toml-path api/Ballerina.toml package.version)
          echo "Old package version: ${OLD_VERSION}"
          echo "New package veresion: ${{ env.RELEASE_VERSION }}"
          toml set --toml-path api/Ballerina.toml package.version ${{ env.RELEASE_VERSION }}
          toml set --toml-path client/Ballerina.toml package.version ${{ env.RELEASE_VERSION }}
          echo "Successfully updated package.version in api/Ballerina.toml and client/Ballerina.toml from ${OLD_VERSION} to version ${{ env.RELEASE_VERSION }}"
      - name: Commit version changes to repository
        uses: EndBug/add-and-commit@v9 # See: https://github.com/marketplace/actions/add-commit
        with:
          add: "."
          push: origin main
          default_author: github_actions
          message: "Update version in Ballerina.toml files"
  update-staging-db:
    name: Update Azure staging database
    needs: update-version
    runs-on: ubuntu-22.04
    environment: Staging
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Update Azure staging database
        run: |
          cat ./db/schema/*.sql | mysql --host=$HOST --port=$PORT --user=$USER --password=$PASSWORD
        env:
          HOST: ${{ secrets.DB_HOST }}
          PORT: ${{ secrets.DB_PORT }}
          USER: ${{ secrets.DB_USER }}
          PASSWORD: ${{ secrets.DB_PASSWORD }}
          DATABASE: ${{ secrets.DB_DATABASE }}
  update-new-staging-db:
    name: Update new Azure staging database
    needs: update-version
    runs-on: ubuntu-22.04
    environment: Stage
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Update Azure staging database
        run: |
          cat ./db/schema/*.sql | mysql --host=$HOST --port=$PORT --user=$USER --password=$PASSWORD
        env:
          HOST: ${{ secrets.DB_HOST }}
          PORT: ${{ secrets.DB_PORT }}
          USER: ${{ secrets.DB_USER }}
          PASSWORD: ${{ secrets.DB_PASSWORD }}
          DATABASE: ${{ secrets.DB_DATABASE }}
  update-production-database:
    name: Update Production Azure Database
    needs: update-version
    runs-on: ubuntu-22.04
    environment: Production
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Update Azure production database
        run: |
          cat ./db/schema/*.sql | mysql --host=$HOST --port=$PORT --user=$USER --password=$PASSWORD
        env:
          HOST: ${{ secrets.DB_HOST }}
          PORT: ${{ secrets.DB_PORT }}
          USER: ${{ secrets.DB_USER }}
          PASSWORD: ${{ secrets.DB_PASSWORD }}
          DATABASE: ${{ secrets.DB_DATABASE }}
  push-api-client:
    name: Publish GraphQL API Client
    needs: update-staging-db
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Build distribution archive of client package
        uses: ballerina-platform/ballerina-action@394eb82cc07e020948fee8d1474143ae393147f4
        with:
          args: pack
        env:
          WORKING_DIR: client
      - name: Push to central
        uses: ballerina-platform/ballerina-action@394eb82cc07e020948fee8d1474143ae393147f4
        with:
          args: push
        env:
          WORKING_DIR: client
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_ACCESS_TOKEN }}
  update-documentation:
    name: Update documentation
    needs: push-api-client
    uses: avinya-foundation/global-data/.github/workflows/pages.yml@main
